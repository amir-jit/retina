name: Build and Publish Retina Container Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  images:
    name: Build Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["linux"]
        arch: ["amd64", "arm64"]
        component: ["agent", "operator"]

    # required for AZ login/SP
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build/Push Images
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n ${{ secrets.ACR_NAME }}
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make build PLATFORMS=${{ matrix.platform }}/${{ matrix.arch }} COMPONENT=${{ matrix.component }}


  manifests:
    name: Generate Manifests
    runs-on: ubuntu-latest
    needs: images

    strategy:
      matrix:
        component: ["agent", "operator"]

    # required for AZ login/SP
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Generate Manifests
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n ${{ secrets.ACR_NAME }}
          make manifest COMPONENT=${{ matrix.component }}
