name: Build images and run E2E tests. 

on:
  merge_group:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  retina-images:
    name: Build Agent Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["linux"]
        arch: ["amd64", "arm64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n acnpublic
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make retina-image \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }} \
            IMAGE_REGISTRY=acnpublic.azurecr.io \
            BUILDX_ACTION=--push

  retina-win-images:
    name: Build Agent Windows Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["windows"]
        arch: ["amd64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n acnpublic
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make retina-image-win \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }}  \
            IMAGE_REGISTRY=acnpublic.azurecr.io \
            BUILDX_ACTION=--push

  operator-images:
    name: Build Operator Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["linux"]
        arch: ["amd64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n acnpublic
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make retina-operator-image \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }}  \
            IMAGE_REGISTRY=acnpublic.azurecr.io \
            BUILDX_ACTION=--push

  manifests:
    name: Generate Manifests
    runs-on: ubuntu-latest
    needs: [retina-images, retina-win-images, operator-images]

    strategy:
      matrix:
        components: ["retina", "operator"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Generate Manifests
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n acnpublic 
          make manifest COMPONENT=${{ matrix.components }} \
          IMAGE_REGISTRY=acnpublic.azurecr.io \
      
  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: [manifests]

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run E2E Tests
        shell: bash
        run: |
          set -euo pipefail
          export AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION }}
          go test -v ./test/e2e/scenarios/retina/*.go -timeout 30m -tags=e2e -count=1  -args -image-tag=$(make version) -image-registry=acnpublic.azurecr.io -image-namespace=${{ github.repository}}